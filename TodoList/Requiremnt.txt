# Orbital Todo List - Development Requirements

## 1. Overview
Create an innovative todo list application with a circular, orbit-based interface where tasks revolve around a central input sphere in real-time.

---

## 2. Visual Design

### 2.1 Background
- Full viewport gradient background
- Colors: Indigo (#4C1D95) → Purple (#581C87) → Pink (#9D174D)
- Gradient direction: diagonal from top-left to bottom-right

### 2.2 Layout Dimensions
- Container: Maximum width 1024px (max-w-4xl), height 600px
- Centered horizontally and vertically in viewport
- Padding: 16px on all sides

### 2.3 Orbit Rings
- Two concentric circles centered in the container
- **Inner orbit**: 280px diameter, 2px border, purple color at 20% opacity
- **Outer orbit**: 440px diameter, 2px border, purple color at 20% opacity
- Both rings are visual guides only (non-interactive)

---

## 3. Central Input Sphere

### 3.1 Collapsed State (Default)
- Circular button: 128px × 128px (w-32 h-32)
- Background: Gradient from cyan (#22D3EE) to blue (#2563EB)
- Box shadow: Large blur with blue glow at 50% opacity
- Icon: Plus sign (48px × 48px), white color
- Center positioned in container

### 3.2 Hover Behavior
- Scale up to 110% on hover
- Plus icon rotates 90 degrees
- Transition duration: 300ms

### 3.3 Expanded State (On Click/Hover)
- Transforms into rounded rectangle (width: 320px)
- Background: White at 10% opacity with backdrop blur
- Border: 1px solid white at 20% opacity
- Border radius: 24px
- Padding: 24px
- Box shadow: Extra large with soft glow

### 3.4 Input Field (Expanded State)
- Single-line text input
- Placeholder: "What's orbiting your mind?"
- Background: White at 20% opacity
- Border: 2px solid white at 30% opacity
- Border radius: 16px
- Padding: 12px 16px
- Text color: White
- Placeholder color: White at 60% opacity
- Focus state: Border changes to cyan (#22D3EE)
- Auto-focus when expanded

### 3.5 Add Button
- Positioned right of input field
- Background: Gradient from cyan to blue
- Border radius: 16px
- Padding: 12px 24px
- Text: "Add" in white, semi-bold font
- Hover: Scale to 105%
- Box shadow: Large blur

### 3.6 Helper Text
- Text: "Tasks orbit around you • Star for priority"
- Color: White at 60% opacity
- Font size: Small (0.875rem)
- Centered alignment
- Margin top: 12px

### 3.7 Behavior
- Expands on hover over central sphere
- Remains expanded while input has focus or contains text
- Collapses when mouse leaves AND input is empty
- Enter key submits the task
- Click "Add" button submits the task

---

## 4. Task Cards

### 4.1 Task Data Structure
Each task must have:
- **id**: Unique identifier (timestamp)
- **text**: Task description (string)
- **completed**: Boolean (default: false)
- **priority**: Boolean (default: false)
- **angle**: Current orbital position in degrees (0-360)
- **orbit**: Orbit level (0 = inner, 1 = outer)
- **createdAt**: Timestamp

### 4.2 Initial Position
- Random angle between 0-360 degrees
- Default orbit: 1 (outer orbit)
- Orbital radius: 
  - Inner orbit (priority): 140px from center
  - Outer orbit (normal): 220px from center

### 4.3 Card Visual Design

#### Normal Task Card
- Background: Gradient from pink (#EC4899) to purple (#9333EA)
- Border: 2px solid white at 20% opacity
- Border radius: 16px
- Padding: 16px
- Min width: 160px
- Max width: 200px
- Box shadow: Extra large

#### Priority Task Card
- Background: Gradient from yellow (#FBBF24) to orange (#EA580C)
- Pulsing animation (scale 1 to 1.05, 2 second cycle)
- Yellow star icon (16px) in top-right corner with spin animation (3 second rotation)
- All other properties same as normal card

#### Completed Task Card
- Background: Gradient from gray (#4B5563) to dark gray (#1F2937)
- Opacity: 60%
- Task text has strikethrough
- All other properties same as normal card

### 4.4 Card Content
- **Task text**: White color, 0.875rem font size, medium weight, 12px bottom margin
- Text wrapping allowed for long tasks
- Strikethrough applied when completed

### 4.5 Action Buttons
- Container: Flex row with 4px gap, centered
- Initially hidden (opacity: 0)
- Appears on card hover (opacity: 100)
- Smooth transition

#### Button Specifications (All buttons)
- Background: White at 20% opacity
- Hover background: White at 30% opacity
- Border radius: 8px
- Padding: 6px
- Icon size: 16px × 16px
- Icon color: White

#### Button Types (left to right)
1. **Complete/Uncomplete Button**
   - Icon: Check mark
   - Tooltip: "Complete" or "Mark incomplete"
   
2. **Reset Button** (only visible when task is completed)
   - Icon: Counter-clockwise arrow
   - Tooltip: "Reset"
   
3. **Priority Toggle Button**
   - Icon: Star (filled when priority is active)
   - Tooltip: "Toggle priority"
   
4. **Delete Button**
   - Icon: Trash can
   - Hover background: Red at 50% opacity
   - Tooltip: "Delete"

### 4.6 Card Hover Behavior
- Scale to 110%
- Action buttons fade in
- Cursor changes to grab cursor
- Transition: 300ms

---

## 5. Orbital Motion

### 5.1 Animation Loop
- Update frequency: 50ms (20 FPS)
- Continuous animation (runs constantly)

### 5.2 Rotation Speed
- **Normal tasks**: 0.5 degrees per update
- **Completed tasks**: 0.3 degrees per update
- Direction: Clockwise

### 5.3 Position Calculation
```
For each task:
  radius = task.priority ? 140 : 220
  x = cos(angle * π / 180) * radius
  y = sin(angle * π / 180) * radius
  position = center + (x, y)
```

### 5.4 Smooth Transitions
- Position changes: 100ms transition
- All other animations use specified durations

---

## 6. Task Operations

### 6.1 Add Task
**Trigger**: Click "Add" button or press Enter in input field
**Validation**: Text must not be empty (after trimming whitespace)
**Action**:
1. Create new task object with random angle
2. Add to tasks array
3. Clear input field
4. Collapse central sphere
5. Task appears immediately on outer orbit

### 6.2 Toggle Complete
**Trigger**: Click check button on task card
**Action**:
1. Toggle completed status
2. Add 180 degrees to current angle (task jumps to opposite side)
3. If completing: Change to gray gradient, slow down, apply strikethrough
4. If uncompleting: Restore original gradient, speed up, remove strikethrough

### 6.3 Toggle Priority
**Trigger**: Click star button on task card
**Action**:
1. Toggle priority status
2. If activating priority:
   - Move to inner orbit (orbit = 0)
   - Apply yellow/orange gradient
   - Add pulsing animation
   - Show spinning star icon
3. If deactivating priority:
   - Move to outer orbit (orbit = 1)
   - Restore pink/purple gradient
   - Remove animations and star icon

### 6.4 Reset Task
**Trigger**: Click reset button (only visible on completed tasks)
**Action**:
1. Set completed to false
2. Assign new random angle (0-360)
3. Restore normal appearance and speed

### 6.5 Delete Task
**Trigger**: Click trash button on task card
**Action**:
1. Remove task from array immediately
2. Task disappears (no animation required)

---

## 7. Statistics Panel

### 7.1 Position
- Fixed at bottom center of container
- 32px from bottom
- Horizontally centered

### 7.2 Visual Design
- Background: White at 10% opacity with backdrop blur
- Border: 1px solid white at 20% opacity
- Border radius: 16px
- Padding: 12px 24px

### 7.3 Content Layout
- Flex row with 24px gaps between items
- Text size: 0.875rem
- Text color: White

### 7.4 Statistics Items (left to right)
1. **Active Tasks**
   - Purple dot indicator (12px, #A855F7)
   - Text: "Active: [count]"
   - Count: Tasks where completed = false

2. **Completed Tasks**
   - Gray dot indicator (12px, #6B7280)
   - Text: "Done: [count]"
   - Count: Tasks where completed = true

3. **Priority Tasks**
   - Yellow star icon (12px, filled)
   - Text: "Priority: [count]"
   - Count: Tasks where priority = true

---

## 8. Technical Requirements

### 8.1 Framework & Libraries
- **React** (functional components with hooks)
- **useState** for state management
- **useEffect** for orbital animation
- **Lucide React** for icons: Plus, Check, Trash2, Star, RotateCcw
- **Tailwind CSS** for styling (core utilities only)

### 8.2 State Management
```javascript
tasks: Array of task objects
inputValue: String (current input text)
isExpanded: Boolean (central sphere state)
```

### 8.3 Performance Considerations
- Use CSS transforms for positioning (not top/left pixel values when possible)
- Minimize re-renders
- Efficient array operations for task updates
- Smooth 50ms animation interval

### 8.4 Browser Compatibility
- Modern browsers (Chrome, Firefox, Safari, Edge)
- CSS backdrop-filter support required
- CSS transforms and transitions required

### 8.5 Responsive Behavior
- Container adapts to viewport with max-width constraint
- Minimum viewport size: 768px width recommended
- All measurements in px (absolute positioning required for orbital system)

---

## 9. Accessibility Requirements

### 9.1 Keyboard Navigation
- Input field receives focus on expand
- Enter key submits tasks
- Tab navigation through action buttons (when visible)

### 9.2 ARIA Labels
- Add button: "Add task"
- Action buttons: Use title attributes for tooltips
- Input field: Proper placeholder text

### 9.3 Visual Feedback
- Hover states on all interactive elements
- Focus states on input field
- Color contrast meets WCAG guidelines for text on colored backgrounds

---

## 10. Edge Cases & Validation

### 10.1 Empty Input
- Add button does nothing if input is empty or whitespace only
- Input must be trimmed before validation

### 10.2 Long Task Text
- Text wraps within card (max-width: 200px)
- No character limit (trust user judgment)

### 10.3 Many Tasks
- No limit on number of tasks
- Tasks may overlap visually (acceptable)
- Performance should remain smooth up to 50+ tasks

### 10.4 No Tasks State
- Empty state is clean (just orbits and central sphere visible)
- Statistics show all zeros

---

## 11. Animation Specifications

### 11.1 Timing Functions
- Default transitions: ease-in-out
- Scale transforms: ease-in-out
- Opacity fades: ease-in-out

### 11.2 Duration Standards
- Quick interactions: 100ms
- Standard interactions: 300ms
- Pulse animation: 2000ms
- Star spin: 3000ms
- Orbital movement: 50ms updates

### 11.3 Transform Origins
- Scale transforms: center point
- Rotations: center point

---

## 12. Color Palette Reference

### Background Gradients
- Main BG: #4C1D95 → #581C87 → #9D174D
- Normal card: #EC4899 → #9333EA
- Priority card: #FBBF24 → #EA580C
- Completed card: #4B5563 → #1F2937
- Central sphere: #22D3EE → #2563EB

### UI Colors
- White overlays: #FFFFFF at various opacities
- Purple accents: #A855F7, #C084FC
- Cyan accent: #22D3EE
- Yellow accent: #FBBF24
- Red accent: #EF4444

---

## 13. Testing Checklist

- [ ] Tasks orbit continuously at correct speeds
- [ ] Central sphere expands/collapses correctly
- [ ] Adding tasks works via button and Enter key
- [ ] Empty input is properly validated
- [ ] Complete toggle works and updates visual state
- [ ] Priority toggle moves tasks between orbits
- [ ] Reset button restores completed tasks
- [ ] Delete removes tasks immediately
- [ ] Statistics update in real-time
- [ ] Action buttons appear/disappear on hover
- [ ] All animations are smooth
- [ ] Long text wraps properly in cards
- [ ] Multiple tasks don't break layout
- [ ] App works on different screen sizes

---

## 14. Deliverables

1. **React component** (.jsx or .tsx file)
2. **Styled with Tailwind CSS** (inline classes)
3. **Fully functional** (all features working)
4. **Smooth animations** (60fps target for non-orbital elements)
5. **Clean code** (commented where necessary)
6. **Responsive design** (works on 768px+ screens)

---

## 15. Future Enhancement Ideas (Optional)

- Drag and drop to reorder tasks
- Persistence (localStorage)
- Task categories with different orbits
- Sound effects
- Dark/light theme toggle
- Export tasks to clipboard
- Due dates with time-based orbit speed
- Collision detection to prevent overlap

---

**End of Requirements Document**

*Version 1.0 - Orbital Todo List*